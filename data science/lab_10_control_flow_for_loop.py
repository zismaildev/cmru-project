# -*- coding: utf-8 -*-
"""Nattapong Panthiya - Lab 10_Control Flow-For Loop.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1HaHEtLGBrgvVfkZZopSjNRxmYdo7D02P

## FOR LOOP

มาถึง control flow ตัวที่สอง **for-loop**

วิธีการเขียน for-loop คือบอกให้ Python มันทำอะไรซ้ำ ๆไปเรื่อย ๆ จนกว่าจะครบ loop นั้น ๆ ตัวอย่างง่ายๆเช่น print("hello world") 10 รอบ เป็นต้น

```
text = "I love Python."

for char in text:
    print(char)
```

สำหรับ char ที่อยู่ใน **for char in text:** เป็นแค่ชื่อ dummy จะเปลี่ยนเป็นอย่างอื่นก็ได้ เช่น

```
for i in text:
    print(i)
```

for loop ที่เราเขียนทั้งสองแบบได้ผลเหมือนกัน ลองรันโค้ดใน cell ด้านล่าง
"""

# print คำว่า "Hello world" 10 ครั้ง
for a in range(10):
   print("Hello world")

# มาลองดู output ตรงนี้
text = "I love Python."

# ปริ้น character ใน variable text
for a in text:
  print(a)

x = "School"

for i in x:
  print(i)

# พิมพ์สมาชิกทุกตัวที่อยู่ในตัวแปรแบบ list
fruits = ["apple", "banana", "cherry"]
for x in fruits:
  print(x)

"""## range() ฟังชั่นที่ใช้กันทุกวันใน Python

เรายังทำอะไรได้อีกเยอะกับ for-loop ที่ใช้คู่กับ for-loop บ่อยๆเลยคือฟังชั่น range()

```
range(5) จะสร้างตัวเลข 0-4 ขึ้นมา (5 not included)
range(0, 10) จะสร้างตัวเลข 0-9 ขึ้นมา (10 not included)
range(6, 15) จะสร้างตัวเลข 6-14 ขึ้นมา (15 not included)
```
ลองรันโค้ดใน cell ด้านล่าง และดู output ที่ได้ดีๆ
"""

for i in range(5):
  print(i)

for i in range(0,10):
  print(i)

for i in range(6, 15):
  print(i)

"""## range() มีสาม arguments ที่เราสามารถปรับได้

```
## explain range function
range(start, stop, step)

start = ตัวเลขแรกที่เริ่ม
stop = ตัวเลขสุดท้ายที่จบ - 1
step = คล้ายเป็น incremental จาก start ไปถึง stop

## example code
for i in range(1, 10, 2):
    print(i)
    
## output
1
3
5
7
9
```


"""

# range(start, stop, step)
# range(1, 20, 3) จะได้ output ออกมาหน้าตายังไง?
# คิดก่อนรันโค้ด !!

for i in range(1, 10, 3):
  print(i)

# สั่ง Python ให้ปริัน 'hello world' ห้ารอบ

for i in range(5,0,-1): # range(5)  = range(0,5) = range(0,5,1)
  print("hello world")

"""# คำสั่ง break ใช้ร่วมกับ loop

เมื่อใช้คำสั่งสั่ง beak เราสามารถหยุดการวนซ้ำ (loop) ก่อนที่จะครบจำนวนครั้งที่ให้วนซ้ำได้

ตัวอย่าง
```
# ออกจาก loop เมื่อ x คือ  "banana"
fruits = ["apple", "banana", "cherry"]
for x in fruits:
  print(x)
  if x == "banana":
    break
```


"""

fruits = ["apple", "banana", "cherry"]
for x in fruits:
  print(x)
  if x == "banana":
    break

# ลองเอาคำสั่ง print มาไว้หลัง break ผลจะเป็นอย่างไร
fruits = ["apple", "banana", "cherry"]
for x in fruits:
  if x == "banana":
    break
  print(x)

"""# คำสั่ง continue ใช้ร่วมกับ loop

เมื่อใช้คำสั่ง continue เราสามารถ หยุดการทำงานรอบที่ทำอยู่ปัจจุบัน แล้วไปเริ่มการทำงานของรอบถัดไปทันที
ตัวอย่าง

```
# อยากข้ามการพิมพ์ banana
fruits = ["apple", "banana", "cherry"]
for x in fruits:
  if x == "banana":
    continue
  print(x)
```


"""

fruits = ["apple", "banana", "cherry"]
for x in fruits:
  if x == "banana":
    continue
  print(x)

# อยากพิมพ์เลข 1-10 แต่ข้ามเลข 5
for i in range(1,11):
  if i==5:
    continue
  print(i)

"""# การใช้ else กับ for Loop

เราสามารถใช้ else กับ for loop ได้ เพื่อสั่งให้โปรแกรมทำงานบางอย่างภายหลังจากที่ทำงานวนซ้ำด้วย for loop นั้น ๆ เสร็จสิ้น

ตัวอย่าง

```
# พิมพ์ตัวเลข 0-5 เมื่อพิมพ์ครบให้แสดงข้อความ "Finally finished!"
for x in range(6):
  print(x)
else:
  print("Finally finished!")
```

"""

# Print all numbers from 0 to 5, and print a message when the loop has ended:

for x in range(6):
  print(x)
else:
  print("Finally finished!")

"""## แบบฝึกหัด

![alt text](https://images.unsplash.com/photo-1461749280684-dccba630e2f6?ixlib=rb-0.3.5&ixid=eyJhcHBfaWQiOjEyMDd9&s=e5a31d03ddee66863a599421f792e07b&auto=format&fit=crop&w=500&q=60)

สำหรับ excercise นี้ มาลองเขียน for + ifelse เพื่อสร้างโปรแกรมที่ซับซ้อนขึ้น

เราจะเขียน simple program ที่ปริ้นเฉพาะเลขคู่เท่านั้น โดยเขียน for-loop วิ่งผ่าน range(1, 21)
"""

# ข้อที่ 1
# ปริ้นเฉพาะเลขคู่ (even number) เท่านั้น ที่อยู่ในช่วง 1-20
# เลขคู่หารสองลงตัว แปลว่า i % 2 == 0
# % คือ modulo ถ้าใครจำไม่ได้ให้กลับไปดู EP4

for r in range (1,21):
    if (r % 2 == 0):
      print(r)

# ข้อที่ 2
# อันนี้โปรแกรมสำหรับปริ้นเลขคี่ (odd number) เท่านั้น ที่อยู่ในช่วง 1-20
for r in range (1,20):
  if (r % 2 !=0):
    print(r)

"""## Summary

ถ้าเรียนมาถึงตรงนี้แล้ว อนุญาตให้พักได้นักเรียน !!

ทบทวนเรื่อง indentation / white space สำคัญมากๆใน Python อย่างโปรแกรมที่เราเพิ่งเขียนไป if-else จะอยู่ภายใน for-loop (ดูง่ายๆจากระยะย่อหน้าของโค้ด block นั้นๆ)


สิ่งที่ Python ทำใน for-loop ของแบบฝึกหัดข้อที่ 1 ด้านบน คือ
1.  Python เอาตัวเลข 1 ไปจนถึง 20 ไปหารสอง (ทำทีละตัว)
2.  ถ้าเป็นเลขคู่ (i % 2 == 0) ปริ้นมันออกมา
3.  ถ้าเป็นเลขคี่ (i % 2 == 1) ข้ามไปเช็คตัวเลขตัวต่อไป ด้วย keyword **continue**
"""
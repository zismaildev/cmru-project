# -*- coding: utf-8 -*-
"""Nattapong Panthiya - Lab 13_Tuple.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1G2pChCUqViFqOrXYuwdvcSvO8vPsDxZi

## Tuple

![alt text](https://images.unsplash.com/photo-1526250000311-b8f091ec8cac?ixlib=rb-0.3.5&ixid=eyJhcHBfaWQiOjEyMDd9&s=fb6be0ea61644ac7839aac9110f05cf7&auto=format&fit=crop&w=500&q=60)

tuple เหมือน list เกือบทุกอย่างเลย แต่ว่าไม่สามารถเปลี่ยนค่า (values) ทีอยู่ภายใน tuple ได้ ในโลก Python เราเรียกว่า **"immutable"**

เราสร้าง list ด้วย [ ] แต่สร้าง tuple ด้วย ( )

ปล. ในการทำ data analysis เราอาจจะใช้ list มากกว่า tuple นิดหน่อย รู้จักมันไว้ทั้งคู่มีประโยชน์ในระยะยาวแน่นอน
"""

# example list
my_list = [1,2,3,4,5]

# example tuple
my_tuple = (1,2,3,4,5)

# print list & tuple
print(my_list)
print(my_tuple)

print(type(my_list))
print(type(my_tuple))

x = [1,2,3]
print(type(x))

x = tuple(x)
print(x)
print(type(x))

x = list(x)
print(x)
print(type(x))

"""# คุณสมบัติของ tuple

สมาชิกใน tuple มีคุณสมบัติ คือ

*   ordered มีการกำหนดลำดับให้กับสมาชิก (item) แต่ละตัว และลำดับที่กำหนดไว้จะไม่เปลี่ยนแปลง (ยกเว้นใช้ method ในการเปลี่ยนแปลงลำดับ)
*   **unchangeable or immutable** เราไม่สามารถเปลี่ยนแปลง เพิ่ม และลบสมาชิกใน  tuple ภายหลังจากที่สร้าง tuple ขึ้นมาแล้วได้
*   allow duplicate values แต่ละสมาชิกใน tuple สามารถเก็บค่าซ้ำกับสมาชิกตัวอื่นที่อยู่ใน tuple เดียวกันได้

## Slicing

Slicing Tuple ก็ทำเหมือนกับ List และ String เลย

อย่าลืมว่า index ใน Python เริ่มจากศูนย์
"""

my_tuple = ('data', 'science', 1, 2.3, True, [1,2,3])
print(my_tuple)

print(my_tuple[0])
print(my_tuple[-1])
print(my_tuple[0:4])
print(my_tuple[-2:])

# element สุดท้ายใน my_tuple เราสามารถ slice ซ้อนกันได้แบบนี้
# ดึงเอา element สุดท้ายของ [1,2,3]
print(my_tuple[-1][0])

"""# สร้าง tuple ที่มีสมาชิกเพียงตัวเดียว
ถ้าต้องการสร้าง tuple mี่ในนั้นมีสมาชิก (item) แต่ตัวเดียว จะต้องใส่เครื่องหมาย "," หลังสมาชิกนั้นเสมอ ถ้าไม่ใส่ Python จะไม่ถือว่าเป็น tuple


"""

# Example
# One item tuple, remember the comma:

thistuple = ("apple",)
print(type(thistuple))

#NOT a tuple
thistuple = ("apple")
print(type(thistuple))

"""## Tuple Unpacking

เราสามารถสร้าง variables หลายตัวพร้อมกันด้วย tuple ตามตัวอย่างด้านล่าง แบบนี้เราเรียกว่า tuple unpacking สร้างตัวแปร x y z ใน line เดียวได้เลย สะดวกมาก!
"""

my_tuple = (100, 200, 300)

x, y, z = my_tuple

print(x)
print(y)
print(z)

"""## Summary

สรุปคือ tuple เหมือน list แทบทุกอย่างเลย ต่างกันแค่เราไม่สามารถแก้ไข value ที่อยู่ใน tuple ได้

- list เป็น mutable object
- tuple เป็น immutable object

เราสามารถใช้ฟังชั่น len(tuple) เพื่อนับจำนวน values ใน tuple ได้

tuple ก็มี method เหมือนกัน ที่ใช้บ่อยๆคือ .count()
"""

# len( ) function
x = ("a", "a", "a", "b", "c", "c")
print(len(x))

# tuple.count() นับจำนวน value ใน tuple
print(x.count("a"))
print(x.count("b"))
print(x.count("c"))

# for loop
my_tuple = (1, 100, 200, 500, 'Done!')

for i in my_tuple:
  print(i)
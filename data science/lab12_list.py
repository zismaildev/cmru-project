# -*- coding: utf-8 -*-
"""Nattapong Panthiya - Lab12_List.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1_YHCGWKjaBsSgGYZQXS648dRAixLo_1X

## Data Structures

![alt text](https://images.unsplash.com/photo-1516288987280-2ea31cd1756b?ixlib=rb-0.3.5&ixid=eyJhcHBfaWQiOjEyMDd9&s=0a483af4c6f445337f067322c65731b4&auto=format&fit=crop&w=400&q=60)

เราเรียนเรื่อง data types ไปแล้วใน chapter 2 คราวนี้มาลองดู data structures กันบ้าง

data structures ก็คือ data types มาประกอบร่างกันนั่นเอง ใน Python จะมีสามตัวที่เราใช้บ่อยๆ ประกอบด้วย

*   **List**
*   **Tuple**
*   **Dictionary**

tutorial นี้เราจะอธิบายการใช้งาน list ก่อน Python จะสนุกขึ้นอีกเป็นกอง ถ้าทุกคนเข้าใจการใช้ list !!

list อย่างที่ชื่อมันบอกเลย คือ **list of values** เก็บข้อมูล data types ได้หลายแบบใน list เดียว

```
list_a = [1, 2, 3, 4, 5]
list_b = ['a', 'b', 'c', 'd', 'e']
list_c = ['hi', True, 1, 2, 10.2]
```

เราสร้าง list ได้ง่ายๆด้วย [   ] ลองรันโค้ดใน cell ด้านล่าง
"""

list_a = [1, 2, 3, 4, 5]
list_b = ['a', 'b', 'c', 'd', 'e']
list_c = ['hi', True, 1, 2, 10.2]

# ลองปริ้น list ทั้งหมดออกมาดู
print(list_a)
print(list_b)
print(list_c)

# เราสามารถรวม lists เข้าด้วยกันด้วยเครื่องหมาย +
print(list_a + list_b + list_c)
list_d = list_a + list_b + list_c
print(list_d)

# แบบนี้เรียกว่า empty list
empty_list = []

print(empty_list)

print(type(empty_list))

"""# คุณสมบัติของ List

สมาชิกใน list มีคุณสมบัติ คือ

*   ordered มีการกำหนดลำดับให้กับสมาชิก (item) แต่ละตัว และลำดับที่กำหนดไว้จะไม่เปลี่ยนแปลง (ยกเว้นใช้ method ในการเปลี่ยนแปลงลำดับ)
*   changeable or mutableเราสามารถเปลี่ยนแปลง เพิ่ม และลบสมาชิกใน list ภายหลังจากที่สร้าง list ขึ้นมาแล้วได้
*   allow duplicate values แต่ละสมาชิกใน list สามารถเก็บค่าซ้ำกับสมาชิกตัวอื่นที่อยู่ใน list เดียวกันได้

## Slicing List เหมือนกับ Slicing String เลย

ถ้าจำในบท string (LAB7) ที่สอนไปได้ **index ใน Python จะเริ่มจากศูนย์**

list ก็เริ่ม index จาก 0 เช่นเดียวกัน วิธีการ slice ทุกอย่างเหมือนตอนทำกับ string เลย

```
mylist = ['hi', True, 1, 2, 10.2]

mylist[0] จะได้ 'hi'
mylist[1] จะได้ True
mylist[-1] จะได้ 10.2
mylist[-2] จะได้ 2
mylist[0:2] จะได้ ['hi', True]

```

ทวนอีกครั้ง mylist[0:2] Python จะ slice index 0 และ 1 แต่ไม่เอา index 2 ออกมาให้เรา
"""

# example list
mylist = ['hi', True, 1, 2, 10.2]

print(mylist[0])
print(mylist[1])
print(mylist[-1])
print(mylist[0:2])

# ถ้าอยากได้ [True, 1, 2] ต้อง slice ยังไง?
mylist[2:5]

# เราสามารถเปลี่ยนค่า value ที่อยู่ภายใน list ได้ เช่น
# original list
print(mylist)

# change element at index 0
mylist[0] = "HELLO"
print(mylist)

# LIST is mutable

x = [1,2,3]
print(x)

x[2] = 300
print(x)

"""
## เราสามารถเขียน for-loop กับ list ได้

เขียน for-loop เพื่อปริ้นแต่ละ element ใน list ออกมาได้เลย"""

mylist = ['hi', True, 1, 2, 10.2, 500, "HI", "add", 3]

for n in mylist:
  print(str(n) + "!!!")

"""## Basic Data Analysis with List
มาลองหาผลรวม และค่าเฉลี่ยของ list กัน
"""

# เราสามารถหาผลรวมของ list ถ้าเป็นตัวเลขทั้งหมดได้ด้วยฟังชั่น sum()

mylist2 = [1,2,3,4,5,6,7,8,9,10]
print(sum(mylist2))

"""ใน Python ไม่มีฟังชั่น mean() ที่ใช้หาค่าเฉลี่ยขอตัวเลขใน list ได้ตรงๆ

เราเลยต้องเขียน for loop เพื่อคำนวณค่าเฉลี่ยเอง ลองรันโค้ดใน cell ด้านล่างเพื่อดู output

เดี๋ยวพอเรียนไปถึง EP18 - EP20 นักเรียนจะได้เห็นวิธีการวิเคราะห์ข้อมูลที่ง่ายกว่านี้อีกเยอะเลย
"""

# ถ้าอยากหาค่า mean ใน Python เราต้องเขียน for loop เองแบบนี้
result = 0.0 # float
mylist2 = [1,2,3,4,5,6,7,8,9,10]

# หาผลรวมของ number ทั้งหมดใน mylist2
for num in mylist2:
  result = result + num

# คำนวณค่าเฉลี่ย total/n
#result = sum(mylist2)
print("average is: " + str(result/ len(mylist2)))

"""## List methods ที่สำคัญๆ

ทบทวน method ก็คือ function รูปแบบหนึ่งที่ใช้เฉพาะกับ class นั้นๆ (เหมือนในบทที่เรียนเรื่อง string) list ก็มี method ของตัวเองเหมือนกัน

```
mylist = [1, 100, 20, 30, 25, 32, 8]
dir(mylist)
```

ใช้ dir(mylist) เพื่อเรียกดู methods ทั้งหมดของ class **list** ที่เราใช้บ่อยๆ เช่น

*  mylist.append()
*  mylist.sort()
*  mylist.pop()

ลองดูตัวอย่างการใช้งานใน cell ด้านล่าง
"""

mylist = [1, 100, 20, 30, 25, 32, 8]
dir(mylist)

# original list
mylist = [1, 100, 20, 30, 25, 32, 8]

# เพิ่มเลข 67 ไปต่อท้าย mylist
mylist.append(67)
mylist.append(12)
print(mylist)

# original list
mylist = [1, 100, 20, 30, 25, 32, 8]

# เรียงข้อมูลจากน้อยไปมาก
mylist.sort()
print(mylist)

# เรียงข้อมูลจากมากไปน้อย
mylist.sort(reverse=True) # descending order
print(mylist)

# original list
mylist = [1, 100, 20, 30, 25, 32, 8]

# ลบข้อมูลตัวสุดท้ายใน list
mylist.pop()
print(mylist)

# ลบข้อมูลที่อยู่ในตำแหน่ง index = 2
mylist.pop(2)
print(mylist)

"""## Summary

![alt text](https://images.unsplash.com/photo-1526634241629-817b87f9a7e2?ixlib=rb-0.3.5&ixid=eyJhcHBfaWQiOjEyMDd9&s=64d7f84b3323f2ae531b10394caccb51&auto=format&fit=crop&w=400&q=60)

Take a break !!!

สรุปเนื้อหาเยอะมาก ที่เราเรียนด้วยกันใน tutorial นี้

- เราสามารถสร้าง list ได้ด้วย [ ]
- list เก็บข้อมูลได้หลายแบบ
- list + list = new_list
- เราสามารถแก้ไข value ที่อยู่ใน list ได้ (**mutable**)
- list ถูก slice ได้เหมือนกับ string
- list index เริ่มที่ศูนย์
- list.method() ที่สำคัญๆเช่น .append() .sort() .pop() หรืออยากรู้เกี่ยวกับ method ของ list อื่น ๆ ให้กด[ที่นี่](https://www.w3schools.com/python/python_lists_methods.asp)
"""

# อยากดูว่า list มี method อะไรให้ใช้บ้าง ดูดได้ด้วย dir()
my_list = []
dir(my_list)

# แบบฝึกหัด
# รับคะแนนสอบของนักเรียน 5 คน จากแป้นพิมพ์มาเก็บไว้ในตัวแปรแบบ list
# จากนั้นให้เรียงลำดับคะแนนจากมากไปน้อย พร้อมแสดงผลการเรียงลำดับ

student_score = []

for r in range(5):
    score = int(input("ใส่คะแนนเพื่อนคนที่ {}: ".format(r+1)))
    student_score.append(score)

student_score.sort(reverse=True)  # เรียงคะแนนจากมากไปน้อย

print("คะแนนของเพื่อนทั้งหมดที่เรียงจากมากไปน้อยคือ", student_score)